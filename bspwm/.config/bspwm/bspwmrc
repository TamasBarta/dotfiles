#! /bin/sh

export DOTFILES_HOME=$HOME/.dotfiles
source $HOME/.config/zsh/xdg.sh
source $XDG_CONFIG_HOME/zsh/rbenv.zsh
source $XDG_CONFIG_HOME/zsh/path.zsh

xrdb -merge $XDG_CONFIG_HOME/X11/Xresources
xrandr --dpi $(xrdb -query | awk '/Xft\.dpi/ { print $2 }')
export DPI=$(xdpyinfo | awk -F' *|x' '/resolution/ { print $3 }')
export SCALING=0$(bc <<< "scale=5; $DPI / 96")

# export GDK_SCALE=$SCALING
# export GDK_DPI_SCALE=0$(bc <<< "scale=5; 1 / $SCALING")

export QT_AUTO_SCREEN_SCALE_FACTOR=0
export QT_SCREEN_SCALE_FACTORS=$SCALING

export QT_QPA_PLATFORMTHEME=qt5ct
export _JAVA_AWT_WM_NONREPARENTING=1
wmname LG3D

export UNAME=Linux

bspwm-desktops.sh
# killall bspc to kill all bspc subscribes
killall bspc
bspc subscribe monitor | xargs -n1 bspwm-desktops.sh &
bspc config external_rules_command $(which external_rules.sh)

bspc config border_width         $(bc <<< "$SCALING * 4")
bspc config left_padding         0
bspc config right_padding        0
bspc config top_padding          $(bc <<< "$SCALING * 30")
bspc config bottom_padding       0
bspc config normal_border_color  "#263238"
bspc config focused_border_color "#6dc1b8"
bspc config active_border_color  "#263238"
bspc config presel_border_color  "#6dc1b8"
bspc config urgent_border_color  "#F76D47"
bspc config window_gap           $(bc <<< "$SCALING * 30")

bspc config split_ratio          0.5
bspc config borderless_monocle   true
bspc config gapless_monocle      true

# bspc desktop browser -l monocle

bspc rule -a TelegramDesktop desktop='^5'
bspc rule -a Caprine desktop='^5'
bspc rule -a Evolution desktop='^3'
bspc rule -a slack desktop='^3'
bspc rule -a jetbrainsspace-nativefier-757a20 desktop='^3'
bspc rule -a Spotify desktop='^5'
bspc rule -a steam desktop='^8' state=fullscreen
# bspc rule -a firefox-kde-opensuse desktop='^1'
bspc rule -a Screenkey manage=off
bspc rule -a plasmashell sticky=true manage=off state=floating layer=above
bspc rule -a lattedock sticky=true manage=off state=floating layer=above
# bspc rule -a kitty state=pseudo_tiled
bspc rule -a scrcpy state=pseudo_tiled
bspc rule -a jetbrains-toolbox state=floating
bspc rule -a java-lang-Thread state=pseudo_tiled
bspc rule -a ulauncher manage=off
bspc rule -a todoist state=floating rectangle=600x200 center=true



rm $XDG_CONFIG_HOME/.dunstmuted
export DUNST_GEOMETRY="$(printf %d $(bc <<< "$SCALING * 350"))x10-$(printf %d $(bc <<< "$SCALING * 30"))+$(printf %d $(bc <<< "$SCALING * 60"))"
export DUNST_FRAME_WIDTH=$(printf %d $(bc <<< "$SCALING * 4"))
export DUNST_MAX_ICON_SIZE=$(printf %d $(bc <<< "$SCALING * 64"))
export DUNST_PADDING=$(printf %d $(bc <<< "$SCALING * 20"))
export DUNST_HORIZONTAL_PADDING=$(printf %d $(bc <<< "$SCALING * 30"))
envsubst < $XDG_CONFIG_HOME/dunst/dunstrc.template > $XDG_CONFIG_HOME/dunst/dunstrc
killall dunst; dunst &
killall sxhkd; sxhkd &
killall picom; picom --experimental-backends &
killall polkit-kde-authentication-agent-1; /usr/lib/polkit-kde-authentication-agent-1 &
$XDG_CONFIG_HOME/polybar/launch.sh & 
killall fusuma; fusuma &
apply-touchpad-settings.sh &
logitech.sh &

setxkbmap -option caps:super hu
killall xcape; xcape -e 'Super_L=Escape' &
xsetroot -cursor_name left_ptr

if [ -f ~/.fehbg ]; then ~/.fehbg; fi


# if ! pgrep -x volumeicon; then volumeicon; fi &
# if ! pgrep -x cbatticon; then cbatticon; fi &
if ! pgrep -x nm-applet; then nm-applet; fi &
if ! pgrep -x spotify; then /usr/local/bin/spotify --force-device-scale-factor=$SCALING; fi &
# if ! pgrep -x caprine; then caprine; fi &
if ! pgrep -x telegram-deskto; then telegram-desktop; fi &
if ! pgrep -x evolution; then evolution; fi &
# if ! pgrep -x JetBrainsSpace; then $XDG_DATA_HOME/JetBrainsSpace-linux-x64/JetBrainsSpace; fi &
# if ! pgrep -x slack; then slack; fi &
