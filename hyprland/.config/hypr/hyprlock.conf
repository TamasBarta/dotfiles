general {
  grace = 0
}

background {
  monitor =
  path = /home/tamas/Pictures/Wallpapers/malte-michels-s4wGZw3UuLk-unsplash.jpg
  blur_passes = 3
}

image {
  monitor =
  path = /home/tamas/Pictures/People/avatar.jpg
  size = 150
  halign = center
  valign = center
  position = 0, -220
  rounding = -1
}

input-field {
    monitor =
    size = 250, 40
    outline_thickness = 0
    dots_size = 0.33 # Scale of input-field height, 0.2 - 0.8
    dots_spacing = 0.15 # Scale of dots' absolute size, 0.0 - 1.0
    dots_center = false
    dots_rounding = -1 # -1 default circle, -2 follow input-field rounding
    outer_color = rgb(151515)
    inner_color = rgba(200, 200, 200, 0.2)
    font_color = rgb(200, 200, 200)
  # font_color = rgb(10, 10, 10)
    fade_on_empty = true
    fade_timeout = 1000 # Milliseconds before fade_on_empty is triggered.
    placeholder_text = 
    hide_input = false
    rounding = -1 # -1 means complete rounding (circle/oval)
    check_color = rgba(204, 136, 34, 0.2)
    fail_color = rgb(204, 34, 34) # if authentication failed, changes outer_color and fail message color
    fail_text = <i>$FAIL <b>($ATTEMPTS)</b></i> # can be set to empty
    fail_transition = 300 # transition time in ms between normal outer_color and fail_color
    capslock_color = -1
    numlock_color = -1
    bothlock_color = -1 # when both locks are active. -1 means don't change outer color (same for above)
    invert_numlock = false # change color if numlock is off
    swap_font_color = false # see below

    position = 0, -340
    halign = center
    valign = center
}

label {
    monitor =
    text = Hi there, $DESC
    text_align = center # center/right or any value for default left. multi-line text alignment inside label container
    color = rgba(200, 200, 200, 1.0)
    font_size = 24
    font_family = JetBrainsMono Nerd Font, Bold
    rotate = 0 # degrees, counter-clockwise

    position = 0, -100
    halign = center
    valign = center
    shadow_passes = 3
}

label {
  monitor =
  text = cmd[update:1000] echo -e "<span foreground='##a6e3a1'>$(date '+%k' | tr -d ' ')</span>:$(date '+%M')"
  text_align = center
  color = rgba(200, 200, 200, 1.0)
  font_size = 100
  font_family = JetBrainsMono Nerd Font, Bold
  position = 0, 550
  halign = center
  valign = center
  shadow_passes = 3
}

label {
  monitor =
  text = cmd[update:1000] count=$(($(dunstctl history | jq ".data[] | map(select(.timestamp.data >= $(ps -p $(pgrep hyprlock) -o lstart= | xargs -I {} date -d "{}" +%s%3N | awk -v boot=$(date -d "$(uptime -s)" +%s%3N) '{print ($1 - boot) * 1000}'))) | length") + $(dunstctl count displayed))); if [ $count -gt 0 ]; then echo "You have $count new notifications"; fi
  text_align = center
  color = rgba(200, 200, 200, 1.0)
  font_size = 32
  font_family = JetBrainsMono Nerd Font
  shadow_passes = 3
  position = 0, 80
  halign = center
  valign = bottom
}

label {
  monitor =
  text = cmd[update:1000] date '+%Y, %B %d, %A'
  text_align = center
  color = rgba(200, 200, 200, 1.0)
  font_size = 32
  font_family = JetBrainsMono Nerd Font, Bold
  position = 0, 430
  halign = center
  valign = center
    shadow_passes = 3
}

label {
  monitor =
  text = cmd[update:1000]  echo -e "$(upower -i $(upower -e | grep -i bat) | grep -E 'state|percentage' | awk -F': ' 'BEGIN{icon="";} /state/{gsub(/^[ \t]+|[ \t]+$/, "", $2); state=$2;} /percentage/{gsub(/^[ \t]+|[ \t]+%$/, "", $2); percentage=$2; if(state=="charging"){icon="󰂄"} else {if(percentage >= 95) icon="󰁹"; else if (percentage >= 80) icon="󰂂"; else if(percentage >= 60) icon="󰂀"; else if(percentage >= 40) icon="󰁾"; else if(percentage >= 20) icon="󰁼"; else icon="󰁺";} print icon" "percentage"";}')"
  text_align = left
  color = rgba(200, 200, 200, 1.0)
  font_family = JetBrainsMono Nerd Font
  font_size = 20
  position = -30, 30
  halign = right
  valign = bottom
    shadow_passes = 3
}
